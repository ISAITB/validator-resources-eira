<pattern xmlns="http://purl.oclc.org/dsdl/schematron" is-a="Step.03" id="MEF-Step.03">
	<!-- Tests -->
	<param name="EIRA-018-01" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Public Policy')])"/>
	<param name="EIRA-018-02" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Public Service Provider')])"/>
	<param name="EIRA-018-03" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Public Service Consumer')])"/>
	<param name="EIRA-018-04" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Interoperable Digital Public Service')])"/>
	<param name="EIRA-018-05" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Digital Business Capability')])"/>
	<param name="EIRA-018-06" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Business Information')])"/>
	<param name="EIRA-018-07" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), 'Representation')])"/>

	<param name="EIRA-019-01" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), '(Data Policy|Descriptive Metadata Policy|Master Data Policy|Base Registry Data Policy|Reference Data Policy|Open Data Policy|Data Portability Policy|Security Policy|Privacy Policy)')])"/>
	<param name="EIRA-019-02" value="exists(a:elements/a:element[matches(string(@xsi:type), 'CommunicationNetwork|TechnologyService|Node') and (let $declaredAbbName := substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:') return exists(document('eira/EIRA.xml')/a:model/a:elements/a:element[a:properties/a:property[@propertyDefinitionRef = string(document('eira/EIRA.xml')/a:model/a:propertyDefinitions/a:propertyDefinition[a:name = 'dct:type']/@identifier) and starts-with(string(a:value), 'eira:')] and string(a:name) = $declaredAbbName]))])"/>
	<param name="EIRA-019-03" value="exists(a:elements/a:element[matches(string(@xsi:type), 'ApplicationService') and (let $declaredAbbName := substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:') return exists(document('eira/EIRA.xml')/a:model/a:elements/a:element[a:properties/a:property[@propertyDefinitionRef = string(document('eira/EIRA.xml')/a:model/a:propertyDefinitions/a:propertyDefinition[a:name = 'dct:type']/@identifier) and starts-with(string(a:value), 'eira:')] and string(a:name) = $declaredAbbName]))])"/>
	<param name="EIRA-019-04" value="exists(a:elements/a:element[matches(string(@xsi:type), 'ApplicationComponent') and (let $declaredAbbName := substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:') return exists(document('eira/EIRA.xml')/a:model/a:elements/a:element[a:properties/a:property[@propertyDefinitionRef = string(document('eira/EIRA.xml')/a:model/a:propertyDefinitions/a:propertyDefinition[a:name = 'dct:type']/@identifier) and starts-with(string(a:value), 'eira:')] and string(a:name) = $declaredAbbName]))])"/>

	<param name="EIRA-020-01" value="exists(a:elements/a:element[matches(normalize-space(substring-after(normalize-space(substring-before(normalize-space(substring-after(string(a:name), '&lt;&lt;')), '&gt;&gt;')), 'eira:')), '(Machine to Machine Interface|Human Interface)')])"/>

	<!-- Contexts -->
	<param name="Model" value="/a:model"/>

</pattern>